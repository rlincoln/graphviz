diff --git a/config/BuildSystem/config/base.py b/config/BuildSystem/config/base.py
index 2eec525..b47f05f 100644
--- a/config/BuildSystem/config/base.py
+++ b/config/BuildSystem/config/base.py
@@ -480,11 +480,15 @@ class Configure(script.Script):
 
     cleanup = cleanup and self.framework.doCleanup
     command = self.getCompilerCmd()
+    command = command.replace('"', '')
     if self.compilerDefines: self.framework.outputHeader(self.compilerDefines)
     self.framework.outputCHeader(self.compilerFixes)
     f = file(self.compilerSource, 'w')
     f.write(self.getCode(includes, body, codeBegin, codeEnd))
     f.close()
+
+    self.framework.log.write('\n\nCommand:\n' + command + '\n\n')
+
     (out, err, ret) = Configure.executeShellCommand(command, checkCommand = report, log = self.framework.log)
     if not os.path.isfile(self.compilerObj):
       err += '\nPETSc Error: No output file produced'
@@ -495,6 +499,9 @@ class Configure(script.Script):
 
   def checkCompile(self, includes = '', body = '', cleanup = 1, codeBegin = None, codeEnd = None):
     '''Returns True if the compile was successful'''
+
+    self.framework.log.write('Check compile:' + includes)
+
     (output, error, returnCode) = self.outputCompile(includes, body, cleanup, codeBegin, codeEnd)
     output = self.filterCompileOutput(output+'\n'+error)
     return not (returnCode or len(output))
@@ -546,6 +553,7 @@ class Configure(script.Script):
       cmd = self.getLinkerCmd()
     if linkLanguage is not None and linkLanguage != self.language[-1]:
       self.popLanguage()
+    cmd = cmd.replace('"', '')
 
     linkerObj = self.linkerObj
     def report(command, status, output, error):
diff --git a/config/PETSc/utilities/petscclone.py b/config/PETSc/utilities/petscclone.py
index 1ac9f4f..8bb729c 100644
--- a/config/PETSc/utilities/petscclone.py
+++ b/config/PETSc/utilities/petscclone.py
@@ -32,7 +32,7 @@ class Configure(config.base.Configure):
       else:
         self.logPrint('This repository clone is obtained as a tarball as neither .hg nor .git dirs exist!')
     else:
-      if os.path.exists(os.path.join(self.petscdir.dir, '.git')) or os.path.exists(os.path.join(self.petscdir.dir, '.hg')):
+      if os.path.exists(os.path.join(self.petscdir.dir, '.hg')):
         raise RuntimeError('Your petsc-dev directory is broken, remove the entire directory and start all over again')
       else:
         self.logPrint('This is a tarball installation')
