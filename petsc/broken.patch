diff --git a/config/BuildSystem/config/functions.py b/config/BuildSystem/config/functions.py
index ed03414..50416bc 100644
--- a/config/BuildSystem/config/functions.py
+++ b/config/BuildSystem/config/functions.py
@@ -114,7 +114,7 @@ builtin and then its argument prototype would still apply. */
       else:
         return
     if not self.framework.argDB['with-batch']:
-      if not self.checkRun('#include <string.h>\nvoid exit(int);\n\n', 'char c0 = 0x40;\nchar c1 = (char) 0x80;\nchar c2 = (char) 0x81;\nexit(memcmp(&c0, &c2, 1) < 0 && memcmp(&c1, &c2, 1) < 0 ? 0 : 1);\n'):
+      if not self.checkRun('#include <string.h>\nvoid exit(int);\n\n', 'char c0 = 0x40;\nchar c1 = (char) 0x80;\nchar c2 = (char) 0x81;\nexit(memcmp(&c0, &c2, 1) < 0 && memcmp(&c1, &c2, 1) < 0 ? 0 : 1);\n', executor=os.environ['NACL_SDK_ROOT']+'/tools/sel_ldr.py'):
         raise RuntimeError('Failed to find 8-bit clean memcmp(). Cannot proceed.')
     else:
       self.framework.addBatchInclude('#include <string.h>')
diff --git a/config/BuildSystem/config/setCompilers.py b/config/BuildSystem/config/setCompilers.py
index 100a00a..fe77a01 100644
--- a/config/BuildSystem/config/setCompilers.py
+++ b/config/BuildSystem/config/setCompilers.py
@@ -449,7 +449,7 @@ class Configure(config.base.Configure):
       raise RuntimeError(msg)
     self.LIBS = oldlibs
     if not self.framework.argDB['with-batch']:
-      if not self.checkRun():
+      if not self.checkRun(executor=os.environ['NACL_SDK_ROOT']+'/tools/sel_ldr.py'):
         msg = 'Cannot run executables created with '+language+'. If this machine uses a batch system \nto submit jobs you will need to configure using ./configure with the additional option  --with-batch.\n Otherwise there is problem with the compilers. Can you compile and run code with your C/C++ (and maybe Fortran) compilers?\n'
         if self.isIntel(self.getCompiler()):
           msg = msg + 'See http://www.mcs.anl.gov/petsc/documentation/faq.html#libimf'
diff --git a/config/BuildSystem/config/types.py b/config/BuildSystem/config/types.py
index d7ca720..075148d 100644
--- a/config/BuildSystem/config/types.py
+++ b/config/BuildSystem/config/types.py
@@ -288,7 +288,7 @@ void (*signal())();
     if not 'known-sizeof-'+typename in self.framework.argDB:
       if not self.framework.argDB['with-batch']:
         self.pushLanguage('C')
-        if self.checkRun(includes, body) and os.path.exists(filename):
+        if self.checkRun(includes, body, executor=os.environ['NACL_SDK_ROOT']+'/tools/sel_ldr.py') and os.path.exists(filename):
           f    = file(filename)
           size = int(f.read())
           f.close()
@@ -336,7 +336,7 @@ void (*signal())();
     if 'known-bits-per-byte' in self.framework.argDB:
       bits = self.framework.argDB['known-bits-per-byte']
     elif not self.framework.argDB['with-batch']:
-      if self.checkRun(includes, body) and os.path.exists(filename):
+      if self.checkRun(includes, body, executor=os.environ['NACL_SDK_ROOT']+'/tools/sel_ldr.py') and os.path.exists(filename):
         f    = file(filename)
         bits = int(f.read())
         f.close()
diff --git a/config/PETSc/utilities/petscclone.py b/config/PETSc/utilities/petscclone.py
index 1ac9f4f..8bb729c 100644
--- a/config/PETSc/utilities/petscclone.py
+++ b/config/PETSc/utilities/petscclone.py
@@ -32,7 +32,7 @@ class Configure(config.base.Configure):
       else:
         self.logPrint('This repository clone is obtained as a tarball as neither .hg nor .git dirs exist!')
     else:
-      if os.path.exists(os.path.join(self.petscdir.dir, '.git')) or os.path.exists(os.path.join(self.petscdir.dir, '.hg')):
+      if os.path.exists(os.path.join(self.petscdir.dir, '.hg')):
         raise RuntimeError('Your petsc-dev directory is broken, remove the entire directory and start all over again')
       else:
         self.logPrint('This is a tarball installation')
