diff --git a/AMD/Makefile b/AMD/Makefile
index 0b1e01b..a13ba9b 100644
--- a/AMD/Makefile
+++ b/AMD/Makefile
@@ -13,7 +13,7 @@ demos: all
 # Compile all C code.  Do not compile the FORTRAN versions.
 all:
 	( cd Lib    ; $(MAKE) )
-	( cd Demo   ; $(MAKE) )
+#	( cd Demo   ; $(MAKE) )
 
 # compile just the C-callable libraries (not Demos)
 library:
diff --git a/CAMD/Makefile b/CAMD/Makefile
index 9c87731..93cbd7c 100644
--- a/CAMD/Makefile
+++ b/CAMD/Makefile
@@ -13,7 +13,7 @@ demos: all
 # Compile all C code.  Do not compile the FORTRAN versions.
 all:
 	( cd Lib    ; $(MAKE) )
-	( cd Demo   ; $(MAKE) )
+#	( cd Demo   ; $(MAKE) )
 
 # compile just the C-callable libraries (not Demos)
 library:
diff --git a/CHOLMOD/Demo/Makefile b/CHOLMOD/Demo/Makefile
index 894aaee..5cff8e9 100644
--- a/CHOLMOD/Demo/Makefile
+++ b/CHOLMOD/Demo/Makefile
@@ -57,22 +57,22 @@ endif
 
 C = $(CC) $(CF) $(CHOLMOD_CONFIG) $(CONFIG)
 
-code: library cholmod_demo cholmod_l_demo cholmod_simple
+code: library
 
 fortran: readhb readhb2 reade 
 
 all: code
-	./cholmod_demo < Matrix/bcsstk01.tri
-	./cholmod_l_demo < Matrix/bcsstk01.tri
-	./cholmod_demo < Matrix/lp_afiro.tri
-	./cholmod_l_demo < Matrix/lp_afiro.tri
-	./cholmod_demo < Matrix/can___24.mtx
-	./cholmod_l_demo < Matrix/can___24.mtx
-	./cholmod_demo < Matrix/c.tri
-	./cholmod_l_demo < Matrix/c.tri
-	./cholmod_simple < Matrix/c.tri
-	./cholmod_simple < Matrix/can___24.mtx
-	./cholmod_simple < Matrix/bcsstk01.tri
+#	./cholmod_demo < Matrix/bcsstk01.tri
+#	./cholmod_l_demo < Matrix/bcsstk01.tri
+#	./cholmod_demo < Matrix/lp_afiro.tri
+#	./cholmod_l_demo < Matrix/lp_afiro.tri
+#	./cholmod_demo < Matrix/can___24.mtx
+#	./cholmod_l_demo < Matrix/can___24.mtx
+#	./cholmod_demo < Matrix/c.tri
+#	./cholmod_l_demo < Matrix/c.tri
+#	./cholmod_simple < Matrix/c.tri
+#	./cholmod_simple < Matrix/can___24.mtx
+#	./cholmod_simple < Matrix/bcsstk01.tri
 
 # run on a big matrix.  This exercises the GPU, if compiled to exploit it
 big: code
diff --git a/KLU/Makefile b/KLU/Makefile
index 1ca71fd..c13ca57 100644
--- a/KLU/Makefile
+++ b/KLU/Makefile
@@ -12,7 +12,7 @@ demos: all
 
 all:
 	( cd Lib ; $(MAKE) )
-	( cd Demo ; $(MAKE) )
+#	( cd Demo ; $(MAKE) )
 
 library:
 	( cd Lib ; $(MAKE) )
diff --git a/RBio/Makefile b/RBio/Makefile
index 82ddadc..e6467ab 100644
--- a/RBio/Makefile
+++ b/RBio/Makefile
@@ -11,7 +11,7 @@ include ../SuiteSparse_config/SuiteSparse_config.mk
 # Compile the C-callable libraries and the Demo programs.
 all:
 	( cd Lib ; $(MAKE) )
-	( cd Demo ; $(MAKE) )
+#	( cd Demo ; $(MAKE) )
 
 # Compile the C-callable libraries only.
 library:
diff --git a/SuiteSparse_config/SuiteSparse_config.mk b/SuiteSparse_config/SuiteSparse_config.mk
index 3ab813c..f479c7d 100644
--- a/SuiteSparse_config/SuiteSparse_config.mk
+++ b/SuiteSparse_config/SuiteSparse_config.mk
@@ -95,8 +95,8 @@ F77LIB =
 # LIB = -lm
 
 # For "make install"
-INSTALL_LIB = /usr/local/lib
-INSTALL_INCLUDE = /usr/local/include
+INSTALL_LIB ?= /usr/local/lib
+INSTALL_INCLUDE ?= /usr/local/include
 
 # Which version of MAKE you are using (default is "make")
 # MAKE = make
@@ -120,7 +120,7 @@ INSTALL_INCLUDE = /usr/local/include
 
 # This is probably slow ... it might connect to the Standard Reference BLAS:
 # BLAS = -lblas -lgfortran
-  LAPACK = -llapack
+  LAPACK = $(LAPACK_LIB)
 
 # MKL 
 # BLAS = -Wl,--start-group $(MKLROOT)/lib/intel64/libmkl_intel_lp64.a $(MKLROOT)/lib/intel64/libmkl_core.a $(MKLROOT)/lib/intel64/libmkl_intel_thread.a -Wl,--end-group -lpthread -lm
@@ -131,7 +131,7 @@ INSTALL_INCLUDE = /usr/local/include
 # LAPACK =
 
 # OpenBLAS
-  BLAS = -lopenblas
+  BLAS = $(BLAS_LIB)
 # LAPACK = 
 
 # NOTE: this next option for the "Goto BLAS" has nothing to do with a "goto"
diff --git a/UMFPACK/Makefile b/UMFPACK/Makefile
index 606654e..71111db 100644
--- a/UMFPACK/Makefile
+++ b/UMFPACK/Makefile
@@ -13,7 +13,7 @@ include ../SuiteSparse_config/SuiteSparse_config.mk
 # compile all C code (except hb, fortran, and fortran64), incl. AMD and demos
 all:
 	( cd Lib    ; $(MAKE) )
-	( cd Demo   ; $(MAKE) )
+#	( cd Demo   ; $(MAKE) )
 
 # compile just the C-callable UMFPACK library
 library:
